{{/* Used in deployment-console.yaml, bootstrap/job.yaml */}}
{{- if or .Values.bootstrapHook.enabled .Values.console.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.fullname" . }}-remote
  labels: {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: common
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  remote.conf: |
    canton {
      {{- with .Values.common.features }}
      features {
        enable-preview-commands = {{ .enablePreviewCommands }}
        enable-testing-commands = {{ .enableTestingCommands }}
        enable-repair-commands = {{ .enableRepairCommands }}
      }
      {{- end }}

      remote-participants {
        {{ .Values.participantName }} {
          ledger-api {
            address = {{ include "participant.serviceDNS" . | quote }}
            port = {{ .Values.service.ports.public }}
            {{- if .Values.tls.public.enabled }}
            tls {
              trust-collection-file = {{ .Values.tls.public.ca | quote }}
              {{- if .Values.mtls.public.enabled }}
              client-cert = {
                cert-chain-file = {{ .Values.mtls.public.chain | quote }}
                private-key-file = {{ .Values.mtls.public.key | quote }}
              }
              {{- end }}
            }
            {{- end }}
          }
          admin-api {
            address = {{ include "participant.serviceDNS" . | quote }}
            port = {{ .Values.service.ports.admin }}
            {{- if .Values.tls.admin.enabled }}
            tls {
              trust-collection-file = {{ .Values.tls.admin.ca | quote }}
              {{- if .Values.mtls.admin.enabled }}
              client-cert = {
                cert-chain-file = {{ .Values.mtls.admin.chain | quote }}
                private-key-file = {{ .Values.mtls.admin.key | quote }}
              }
              {{- end }}
            }
            {{- end }}
          }
        }
      }
      {{- if .Values.testing.bootstrapHook.automaticDomainRegistration }}
      remote-domain-managers {
        {{ .Values.bootstrapHook.remoteSequencer.domain.alias }} {
          {{- with .Values.testing.bootstrapHook.remoteDomainManager }}
          admin-api {
            address = {{ .host | quote }}
            port = {{ .port }}
            {{- if .tls.enabled }}
            tls {
              trust-collection-file = {{ .tls.ca | quote }}
              {{- if .mtls.enabled }}
              client-cert = {
                cert-chain-file = {{ .mtls.chain | quote }}
                private-key-file = {{ .mtls.key | quote }}
              }
              {{- end }}
            }
            {{- end }}
          }
          {{- end }}
        }
      }
      {{- end }}
    }
{{- end }}

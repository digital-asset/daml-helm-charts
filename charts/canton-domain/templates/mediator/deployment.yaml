---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.fullname" . }}-mediator
  {{- with .Values.mediator.deployment.annotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
  labels: {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: mediator
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.mediator.deployment.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.mediator.replicaCount }}
  selector:
    matchLabels: {{- include "common.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mediator
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
        "checksum/config": {{ include (print $.Template.BasePath "/mediator/configmap.yaml") . | sha256sum | quote }}
        "checksum/env": {{ include (print $.Template.BasePath "/mediator/configmap-env.yaml") . | sha256sum | quote }}
        "checksum/secret": {{ include (print $.Template.BasePath "/mediator/secret-env.yaml") . | sha256sum | quote }}
        {{- with .Values.mediator.pod.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: mediator
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.mediator.pod.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "common.serviceAccountName" (list . "mediator") }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: canton
          image: {{ include "common.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          args:
            - "daemon"
            - "--log-profile=container"
            - "--log-encoder={{ .Values.common.logEncoder }}"
            - "--log-level-root={{ .Values.common.logLevel.root }}"
            - "--log-level-canton={{ .Values.common.logLevel.canton }}"
            - "--log-level-stdout={{ .Values.common.logLevel.stdout }}"
            - "--config=/canton/mediator.conf"
          envFrom:
            {{- if or .Values.common.environment .Values.mediator.environment }}
            - configMapRef:
                name: {{ include "common.fullname" . }}-mediator-envmap
            {{- end }}
            {{- if or .Values.common.environmentSecrets .Values.mediator.environmentSecrets }}
            - secretRef:
                name: {{ include "common.fullname" . }}-mediator-secretmap
            {{- end }}
          env:
          {{- if .Values.mediator.storage.existingSecret.name }}
            - name: CANTON_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mediator.storage.existingSecret.name }}
                  key: {{ .Values.mediator.storage.existingSecret.key }}
          {{- end }}
          ports:
            - name: admin
              containerPort: {{ .Values.mediator.ports.admin }}
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.mediator.ports.metrics }}
            {{- end }}
          {{- with .Values.mediator.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .Values.mediator.livenessProbe }}
            {{- toYaml .Values.mediator.livenessProbe | nindent 12 }}
          {{- else }}
            grpc:
              port: {{ .Values.mediator.ports.health }}
              service: "liveness"
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
          {{- end }}
          readinessProbe:
          {{- if .Values.mediator.readinessProbe }}
            {{- toYaml .Values.mediator.readinessProbe | nindent 12 }}
          {{- else }}
            grpc:
              port: {{ .Values.mediator.ports.health }}
              service: ""
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 1
            timeoutSeconds: 3
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /canton/mediator.conf
              subPath: mediator.conf
              readOnly: true
            {{- if .Values.common.tls.admin.enabled }}
            - name: tls-admin
              mountPath: "/tls-admin"
              readOnly: true
            {{- if .Values.common.mtls.admin.enabled }}
            - name: mtls-admin
              mountPath: "/mtls-admin"
              readOnly: true
            {{- end }}
            {{- end }}
            {{- if .Values.storage.certificatesSecret }}
            - name: pgtls
              mountPath: "/pgtls"
              readOnly: true
            {{- end }}
            {{- with .Values.mediator.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "common.fullname" . }}-mediator
        {{- if and .Values.common.tls.admin.enabled .Values.common.tls.admin.certManager.issuerName }}
        {{- include "certManager.csi" (list . "mediator" "tls-admin" .Values.common.tls.admin.certManager (include "mediator.serviceDNS" .)) | indent 8 }}
        {{- if and .Values.common.mtls.admin.enabled .Values.common.mtls.admin.certManager.issuerName }}
        {{- include "certManager.csi" (list . "mediator" "mtls-admin" .Values.common.mtls.admin.certManager "") | indent 8 }}
        {{- end }}
        {{- end }}
        {{- if .Values.storage.certificatesSecret }}
        - name: pgtls
          secret:
            secretName: {{ .Values.storage.certificatesSecret }}
        {{- end }}
        {{- with .Values.mediator.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.mediator.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mediator.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mediator.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
